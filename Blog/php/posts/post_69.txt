<p>There are n people who want to get to the top of a building which has only one elevator. You know the weight of each person (w1, w2, w3, ..., wn) and the maximum allowed weight in the elevator, x. What is the minimum number of elevator rides?


Constraints:
1 ≤ n ≤ 20
1 ≤ x ≤ 109
1 ≤ wi ≤ x


This problem can be solved using a similar technique to the previous one. One possible approach is to check all possible permutations and partition them into some groups of persons whose weight is not more than x. For example, if there are 7 persons and their weights are [9, 8, 5, 3, 2, 4, 4] in some order and the maximum capacity of the elevator is 13, then we can partition it into some groups like the following. [9 | 8+5 | 3+2+4+4]. In this order, we need 3 elevator rides. If the order is [3, 8, 9, 5, 4, 2, 4], then we can partition it into some groups like this. [3+8 | 9 | 5+4+2 | 4]. In this order, we need 4 elevator rides. This way if we check all the possible permutations, we get the minimum number of elevator rides.

Like the previous problem, here we calculate the minimum number of groups required for each subset of persons as we have at most 2n possible subsets. But there we need to know a piece of additional information. That is the sum of weights of the persons of the last group or partition. If we try to add another person to the subset, at first we try to insert him into the last group if the sum of weights does not exceed x. Otherwise, we consider him in a new group which increases the required number of groups. Let’s make things clear with some examples. Suppose there are 4 persons numbered 1 to 4 having weights 6, 7, 4 and 3. The maximum allowed weight in the elevator is 10. The table below shows the optimal permutation and the minimum number of groups with the minimum sum of the weights of the last group for each subset of persons.



Subset
Mask
Permutation
Minimum Number of Groups
Sum of Weights of the last group
{}
0000
[]
0
0
{1}
1000
[6]
1
6
{2}
0100
[7]
1
7
{3}
0010
[4]
1
4
{4}
0001
[3]
1
3
{1, 2}
1100
[7 | 6]
2
6
{1, 3}
1010
[6  4]
1
10
{1, 4}
1001
[6  3]
1
9
{2, 3}
0110
[7 | 4]
2
4
{2, 4}
0101
[7  3]
1
10
{3, 4}
0011
[4  3]
1
7
{1, 2, 3}
1110
[6 | 7 | 4]
3
4
{1, 2, 4}
1101
[7  3 | 6]
2
6
{1, 3, 4}
1011
[6  4 | 3]
2
3
{2, 3, 4}
0111
[7  3 | 4]
2
4
{1, 2, 3, 4}
1111
[7  3 | 6  4]
2
10



Notice for the subset {1, 2}, there are two possible permutations. [7 | 6] and [6 | 7]. We are taking the permutation [7 | 6] because both permutations have the same number of groups. But 6 is better than 7 as the sum of weights of the last group. 

Here the final result comes from the subset {1, 2, 3, 4}. Suppose we know the optimal values for all the subsets consisting of 3 persons. Now we want to calculate the minimum number of groups for the subset {1, 2, 3, 4}. How can we do that? Before adding the last person to the subset, there were exactly 3 persons in the subset. We don’t know which element has been added last. If we consider the 1st person as the last added person, then the previous subset was {2, 3, 4}. The minimum number of groups required for this subset is 2 and the sum of the weights of the last group is 4. So we can add the first person to the last group as it will not exceed the maximum allowed weight of the elevator. So, in this case, the total number of groups required is 2 and the sum of weights of the last group is 4+6=10. 

If we consider the 2nd person as the last added person, then the previous subset was {1, 3, 4}. The minimum number of groups required for this subset is 2 and the sum of the weights of the last group is 2. So we can add the 2nd person to the last group as it will not exceed x. So, in this case, the total number of groups required is 2 and the sum of weights of the last group is 3+7=10. 

If we consider the 3rd person as the last added person, then the previous subset was {1, 2, 4}. The minimum number of groups required for this subset is 2 and the sum of the weights of the last group is 6. So we can add the 3rd person to the last group as it will not exceed x. So, in this case, the total number of groups required is 2 and the sum of weights of the last group is 6+4=10. 

If we consider the 4th person as the last added person, then the previous subset was {1, 2, 3}. The minimum number of groups required for this subset is 3 and the sum of the weights of the last group is 4. So we can add the first person to the last group as it will not exceed x. So, in this case, the total number of groups required is 3 and the sum of weights of the last group is 4+3=7. 

Thus we get the minimum number of groups for the subset {1, 2, 3, 4} which is 2.

Let’s observe another subset. How can we calculate the values for the subset {1, 2, 4}?

Before adding the last person to the subset, there were 2 persons in the subset. Suppose we know the values for all the subsets consisting of two persons.

If the last person is 1, then the previous subset was {2, 4}. The minimum number of groups required for this subset is 1 and the sum of the weights of the last group is 10. Here we can’t add the 1st person to the last group as the sum of the weights of the last group is already 10. So, in this case, the total number of groups required is 2 and the sum of weights of the last group is the weight of the 1st person which is 6. 

If the last person is 2, then the previous subset was {1, 4}. The minimum number of groups required for this subset is 1 and the sum of the weights of the last group is 9. Here we can’t add the 2nd person to the last group as the sum of the weights of the last group is 9. Adding the 2nd person to the group makes the sum 9+7=16 which is greater than the maximum allowed weight. So, in this case, the total number of groups required is 2 and the sum of weights of the last group is the weight of the 2nd person which is 7. 

If the last person is 4, then the previous subset was {1, 2}. The minimum number of groups required for this subset is 2 and the sum of the weights of the last group is 6. So, we can add the 4th person to the last group. Then the sum of the weights of the last group will become 6+3=9. So, in this case, the total number of groups required is 2 and the sum of weights of the last group is 9.

All the possible ways need 2 groups. But if we consider the 1st person as the last added person, then the sum of weights of the last group is minimized. So for the subset {1, 2, 4}, the minimum number of groups required is 2 and the sum of the weights of the persons of the last group is 6. This way we can calculate the values for all possible weights both iterative or recursively considering each subset as a mask. The base case is for the empty subset, the required number of groups and the sum of the weights is 0 in this case.
</p>